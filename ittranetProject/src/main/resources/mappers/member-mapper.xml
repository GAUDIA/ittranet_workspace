<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResult" type="Employee">
		<result column="emp_no" property="empNo"/>
		<result column="emp_id" property="empId"/>
		<result column="emp_pwd" property="empPwd"/>
		<result column="emp_name" property="empName"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="address" property="address"/>
		<result column="dept_code" property="deptCode"/>
		<result column="team_code" property="teamCode"/>
		<result column="job_code" property="jobCode"/>
		<result column="hire_date" property="hireDate"/>
		<result column="ent_date" property="entDate"/>
		<result column="join_date" property="joinDate"/>
		<result column="status" property="status"/>
		<result column="admin" property="admin"/>
		<result column="profile" property="profile"/>
		<result column="dept_name" property="deptName"/>
		<result column="team_name" property="teamName"/>
		<result column="job_name" property="jobName"/>
	</resultMap>

	<!-- 로그인 -->
	<select id="loginMember" resultMap="memberResult">
		select
		      emp_no
		    , emp_id
		    , emp_pwd
		    , emp_name
		    , phone
		    , email
		    , address
		    , e.dept_code
		    , e.team_code
		    , e.job_code
		    , hire_date
		    , ent_date
		    , join_date
		    , status
		    , admin
		    , profile
		    , d.dept_name
		    , t.team_name
		    , j.job_name
		 from employee e,department d,team t,job j
		where status = 'Y'
		  and e.dept_code = d.dept_code
		  and e.team_code = t.team_code
		  and e.job_code = j.job_code
		  and emp_id = #{empId}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember">
		insert
		  into employee
		  (
		    emp_no
		  , emp_id
		  , emp_pwd
		  , emp_name
		  , phone
		  , email
		  , address
		  )
		  values
		  (
		    seq_eno.nextval
		  , #{empId}
		  , #{empPwd}
		  , #{empName}
		  , #{phone}
		  , #{email}
		  , #{address}
		  )
	</insert>
	
	<!-- 중복 메일 체크 : 중복o(1) 중복x(0) -->
	<select id="mailCheck" resultType="_int">
  		select
  			   count(*)
  		  from employee
  		 where email = #{checkMail}
  	</select>
  	
  	<!-- 중복 아이디 체크 : 중복o(1) 중복x(0) -->
  	<select id="idCheck" resultType="_int">
  		select
  			   count(*)
  		  from employee
  		 where emp_id = #{checkId}
  	</select>
  	
  	<!-- 누구 메일인지 -->
  	<select id="whosMail" resultMap="memberResult">
  		select
  		       emp_id
  		     , emp_pwd
  		     , emp_name
  		     , email
  		  from employee
  		 where email = #{accordMail}
  	</select>
  	
  	<!-- 비밀번호 변경 -->
  	<update id="setTempwd">
  		update
  		       employee
  		   set emp_pwd = #{empPwd}
  		 where emp_id = #{empId}
  	</update>
  	
  	<!-- 사원 스스로 정보 변경(마이페이지) -->
  	<update id="updateMember">
  		update
  		       employee
  		   set emp_name = #{empName}
  		     , email = #{email}
  		     , phone = #{phone}
  		     , address = #{address}
  		     , profile = #{profile}
  		 where emp_id = #{empId}
  	</update>
  	
  	<!-- 계정 삭제(회원탈퇴,사원삭제) -->
  	<update id="deleteMember">
		update
		       employee
		   set status = 'N'
		 where emp_no = #{empNo}
	</update>
	
	<update id="updatePwd">
		update
		       employee
		   set emp_pwd = #{empPwd}
		 where emp_no = #{empNo}
	</update>
	
	<!-- 승인 대기 페이지 회원수(페이징) -->
	<select id="selectWemployeeCount" resultType="_int">
		select
		       count(*)
		  from employee
		 where status = 'W'
	</select>
	
	<!-- 승인 대기 회원 select -->
	<select id="selectWemployee" resultMap="memberResult">
		select
		       emp_no
		     , emp_name
		     , emp_id
		     , phone
		     , email
		  from employee
		 where status = 'W'
		 order
		    by emp_no desc
	</select>
	
	<!-- 모든 회원 수 (페이징) -->
	<select id="selectAllemployeeCount" resultType="_int">
		select
		       count(*)
		  from employee
		 where status = 'Y'
	</select>
	
	<!-- 모든 회원 정보 select -->
	<select id="selectAllemployee" resultMap="memberResult">
		select
		       emp_no
		     , emp_name
		     , emp_id
		     , phone
		     , email
		     , address
		     , d.dept_name
		     , t.team_name
		     , j.job_name
		  from employee e,department d,team t,job j
		 where status = 'Y'
		   and e.dept_code = d.dept_code
		   and e.team_code = t.team_code
		   and e.job_code = j.job_code
		 order
		    by emp_no desc
	</select>
	
	<!-- 가입 승인 완료 && 부서, 팀, 직급 지정 -->
	<update id="confirmMember">
		update
		       employee
		   set status = 'Y'
		     , dept_code = #{deptCode}
		     , team_code = #{teamCode}
		     , job_code = #{jobCode}
		 where emp_no = #{empNo}
	</update>
	

</mapper>